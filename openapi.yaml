openapi: 3.0.3
info:
  title: SkyManager API
  version: 1.0.0
  description: |
    * All date/time values in requests and responses are passed as `TIMESTAMP WITHOUT TIME ZONE`
      — i.e. **naive-UTC**.
    * All prices are quoted in **RUB**.
    * Every request must contain the seller-bot API key (`key`) in the request body.
    * Errors are returned as `{"error":"…", ...}` with HTTP 200,
      so an SDK-client can still read the body even on a 2xx status.
  contact:
    name: SkyManager dev-chat
    url:  https://mitscreator.github.io/SkyManagerDoc
    email: support@skymanager.io

servers:
  - url: https://api.skymanager.io
    description: Production

tags:
  - name: Traffic
    description: Delivery and verification of subscription-tasks

paths:
  /sky/check:
    post:
      tags: [Traffic]
      summary: Fast check whether tasks should be shown
      description: |
        Lightweight call from the SDK bot **on every user entry** to the
        seller’s chat.  
        Instantly creates an *Interaction* record and, if needed, starts an
        async task-building job.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckRequest'
            examples:
              ok:
                summary: Condition that triggers task display
                value: { key: SMabc123, user_id: 6503228803 }
      responses:
        '200':
          description: Flag “show / do not show”
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResponse'
              examples:
                skip: { value: { skip: true  } }
                show: { value: { skip: false } }

  /sky/get_tasks:
    post:
      tags: [Traffic]
      summary: Get a package of subscription-tasks
      description: |
        Returns up to `limit` links the user must open/subscribe to.  
        If a current package already exists, the endpoint simply returns it
        without recalculation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTasksRequest'
      responses:
        '200':
          description: Task list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTasksResponse'
              examples:
                example:
                  value:
                    bundle_id: 25da691f
                    result:
                      - signature: 0cf0…d6b3
                        url: https://t.me/example_bot
                        rtype: bot
                      - signature: 9bd2…12ef
                        url: https://t.me/example_channel
                        rtype: channel

  /sky/check_tasks:
    post:
      tags: [Traffic]
      summary: Confirm completion of a task package
      description: |
        Checks whether all links from the given `bundle_id` are closed.  
        Responds with `done=true` when no links remain with
        `pending_click` or `pending_bundle` status.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckTasksRequest'
      responses:
        '200':
          description: Final result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckTasksResponse'

components:
  schemas:
    CheckRequest:
      type: object
      required: [key, user_id]
      properties:
        key:
          type: string
          description: API key of the seller bot (`UserResource.op_api_key`)
          example: SMabc123
        user_id:
          type: integer
          format: int64
          description: Telegram user-ID
          example: 6503228803
        language_code:
          type: string
          minLength: 2
          maxLength: 5
          description: |
            Two-letter code (ru/en/…) taken from `TelegramUser.language_code`.
          example: ru
        is_premium:
          type: boolean
          description: Telegram Premium flag
          example: false
      additionalProperties: false

    GetTasksRequest:
      allOf:
        - $ref: '#/components/schemas/CheckRequest'
        - type: object
          properties:
            limit:
              type: integer
              minimum: 1
              maximum: 30
              default: 5
      description: |
        Inherits all fields of `CheckRequest` and adds optional `limit`.

    CheckTasksRequest:
      type: object
      required: [key, user_id, bundle_id]
      properties:
        key:     { $ref: '#/components/schemas/CheckRequest/properties/key' }
        user_id: { $ref: '#/components/schemas/CheckRequest/properties/user_id' }
        bundle_id:
          type: string
          pattern: ^[0-9a-f]{8}$
          description: Identifier of the task bundle
          example: 25da691f
      additionalProperties: false

    CheckResponse:
      type: object
      required: [skip]
      properties:
        skip:
          type: boolean
          description: |
            **true** — no tasks should be generated;  
            **false** — SDK client expects an inline message with tasks.
        error:
          type: string
          nullable: true
          description: Error message, if any

    TaskItem:
      type: object
      required: [signature, url, rtype]
      properties:
        signature:
          type: string
          description: 32-char hex subscription token
          example: 0cf0f1d3fd83d0629091ba4a7d9dd6b3
        url:
          type: string
          format: uri
          description: Link to bot/channel/external resource
          example: https://t.me/example_bot
        rtype:
          type: string
          description: Resource type
          enum: [bot, channel, external]

    GetTasksResponse:
      type: object
      required: [result, bundle_id]
      properties:
        bundle_id:
          type: string
          description: Hex-ID of the bundle
          example: 25da691f
        result:
          type: array
          items: { $ref: '#/components/schemas/TaskItem' }

    CheckTasksResponse:
      type: object
      required: [done]
      properties:
        done:
          type: boolean
          description: |
            **true** — all tasks in the bundle are closed;  
            **false** — there are still open links
